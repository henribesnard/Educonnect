# Generated by Django 4.2 on 2023-04-19 09:32

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('etablissements', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ADMIN', 'Admin'), ('HEAD', 'Head of Establishment'), ('STAFF', 'Staff'), ('TEACHER', 'Teacher'), ('PARENT', 'Parent'), ('STUDENT', 'Student')], max_length=50, unique=True, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Username')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Last name')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='First name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('password', models.CharField(max_length=128, verbose_name='Password')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone number')),
                ('is_principal_teacher', models.BooleanField(default=False, verbose_name='Principal Teacher')),
                ('position', models.CharField(blank=True, max_length=200, null=True, verbose_name='Position')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('children', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Children')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur qui a créé')),
                ('establishment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='etablissements.establishment', verbose_name='Establishment')),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.group')),
                ('roles', models.ManyToManyField(blank=True, to='gestion_utilisateurs.role', verbose_name='Roles')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_users', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur qui a mis à jour')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
